{"version":3,"sources":["star.svg","lilninja.png","Ninjas.js","AddNinja.js","Todos.js","AddTodo.js","missions/Create.js","missions/RedDawn.js","missions/Firebase.js","missions/Killfox.js","missions/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Ninjas","ninjas","deleteNinja","className","map","ninja","key","id","src","lilninja","alt","name","specialty","onClick","AddNinja","state","handleSubmit","e","preventDefault","props","addingNinja","handleLabelChange","setState","target","value","handleChange","ninjaName","toLowerCase","split","i","onSubmit","this","htmlFor","type","onChange","content","defaultValue","Component","Todos","todos","deleteTodo","todoList","length","todo","AddTodo","addTodo","Create","Math","random","missionTodos","newTodos","filter","showMissions","RedDawn","Firebase","Killfox","Navbar","to","App","newNinjas","console","log","star","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,gPCuB5BC,EApBC,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,YAEtB,OACE,yBAAKC,UAAU,cAEbF,EAAOG,KAAI,SAAAC,GACT,OAAOA,EACL,yBAAKF,UAAU,QAAQG,IAAKD,EAAME,IAChC,yBAAKC,IAAKC,IAAUC,IAAI,UACxB,iDAAuBL,EAAMM,KAA7B,IAAmC,6BAAnC,cACYN,EAAMO,WAClB,4BAAQC,QAAS,WAAOX,EAAYG,EAAME,MAA1C,MAEA,U,QCiGCO,E,4MA9GbC,MAAQ,CACNJ,KAAM,KACNC,UAAW,M,EAGbI,aAAe,SAACC,GACdA,EAAEC,iBACF,EAAKC,MAAMC,YAAY,EAAKL,Q,EAI9BM,kBAAoB,SAACJ,GACnB,EAAKK,SAAL,eACGL,EAAEM,OAAOhB,GAAKU,EAAEM,OAAOC,S,EAK5BC,aAAe,SAACR,GAKd,IAJA,IAAIS,EAAY,GAEZf,EADUM,EAAEM,OAAOC,MACJG,cAAcC,MAAM,IAE/BC,EAAI,EAAIA,EAAI,EAAGA,IACrB,GAAgB,MAAZlB,EAAKkB,GACPH,GAAe,UACX,GAAgB,MAAZf,EAAKkB,GACfH,GAAc,UACN,GAAgB,MAAZf,EAAKkB,GACjBH,GAAc,UACN,GAAgB,MAAZf,EAAKkB,GACjBH,GAAc,UACN,GAAgB,MAAZf,EAAKkB,GACjBH,GAAc,UACN,GAAgB,MAAZf,EAAKkB,GACjBH,GAAc,UACN,GAAgB,MAAZf,EAAKkB,GACjBH,GAAc,UACN,GAAgB,MAAZf,EAAKkB,GACjBH,GAAc,UACN,GAAgB,MAAZf,EAAKkB,GACjBH,GAAc,UACN,GAAgB,MAAZf,EAAKkB,GACjBH,GAAc,UACN,GAAgB,MAAZf,EAAKkB,GACjBH,GAAc,UACN,GAAgB,MAAZf,EAAKkB,GACjBH,GAAc,UACN,GAAgB,MAAZf,EAAKkB,GACjBH,GAAc,WACN,GAAgB,MAAZf,EAAKkB,GACjBH,GAAc,UACN,GAAgB,MAAZf,EAAKkB,GACjBH,GAAc,UACN,GAAgB,MAAZf,EAAKkB,GACjBH,GAAc,UACN,GAAgB,MAAZf,EAAKkB,GACjBH,GAAc,UACN,GAAgB,MAAZf,EAAKkB,GACjBH,GAAc,WACN,GAAgB,MAAZf,EAAKkB,GACjBH,GAAc,WACN,GAAgB,MAAZf,EAAKkB,GACjBH,GAAc,WACN,GAAgB,MAAZf,EAAKkB,GACjBH,GAAc,UACN,GAAgB,MAAZf,EAAKkB,GACjBH,GAAc,UACN,GAAgB,MAAZf,EAAKkB,GACjBH,GAAc,WACN,GAAgB,MAAZf,EAAKkB,GACjBH,GAAc,UACN,GAAgB,MAAZf,EAAKkB,GACjBH,GAAc,SACN,IAAgB,MAAZf,EAAKkB,GAEZ,CACHH,EAAa,+CACb,MAHFA,GAAc,KAMhB,EAAKJ,SAAL,eACGL,EAAEM,OAAOhB,GAAKmB,K,uDAMjB,OACE,yBAAKvB,UAAU,WACb,0BAAO2B,SAAUC,KAAKf,cACpB,6BACA,2BAAOgB,QAAQ,QAAf,eACA,6BAAK,2BAAOC,KAAK,OAAO1B,GAAG,OAAO2B,SAAUH,KAAKN,aAAcD,MAAOO,KAAKhB,MAAMoB,WAEjF,6BAAK,2BAAOH,QAAQ,aAAf,eACL,6BAAK,4BAAQzB,GAAG,YAAY2B,SAAUH,KAAKV,kBAAmBG,MAAOO,KAAKhB,MAAMoB,SAC9E,4BAAQC,aAAa,mBAArB,mBACA,4BAAQZ,MAAM,sBAAd,sBACA,4BAAQA,MAAM,qBAAd,qBACA,4BAAQA,MAAM,kBAAd,kBACA,4BAAQA,MAAM,sBAAd,sBACA,4BAAQA,MAAM,wBAAd,0BAEF,6BAAK,oD,GAzGQa,a,eCeRC,EAfD,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WACfC,EAAWF,EAAMG,OAEpBH,EAAMnC,KAAI,SAAAuC,GAAQ,OACjB,yBAAKxC,UAAU,kBAAkBG,IAAKqC,EAAKpC,IACzC,0BAAMM,QAAS,WAAM2B,EAAWG,EAAKpC,MAAOoC,EAAKR,aAEpD,wBAAIhC,UAAU,UAAd,gCAED,OACA,yBAAKA,UAAU,yBACZsC,ICgBQG,E,4MA1Bb7B,MAAO,CACLoB,QAAS,I,EAGXV,aAAe,SAACR,GACd,EAAKK,SAAS,CACZa,QAASlB,EAAEM,OAAOC,S,EAGtBR,aAAe,SAACC,GACdA,EAAEC,iBACF,EAAKC,MAAM0B,QAAQ,EAAK9B,Q,uDAIxB,OACE,6BACE,0BAAMe,SAAUC,KAAKf,cACnB,qDACA,2BAAOiB,KAAK,OAAOC,SAAUH,KAAKN,aAAcD,MAAOO,KAAKhB,MAAMoB,UAClE,6C,GArBYE,aC6CPS,E,kDAvCX,aAAc,IAAD,8BACb,gBAQFD,QAAU,SAACF,GACXA,EAAKpC,GAAKwC,KAAKC,SACf,IAAIT,EAAK,sBAAO,EAAKxB,MAAMkC,cAAlB,CAAgCN,IACzC,EAAKrB,SAAS,CACZ2B,aAAcV,KAbD,EAgBfC,WAAc,SAACjC,GACb,IAAI2C,EAAW,EAAKnC,MAAMkC,aAAaE,QAAO,SAAAR,GAC5C,OAAOA,EAAKpC,KAAOA,KAElB,EAAKe,SAAS,CACf2B,aAAcC,KAnBhB,EAAKnC,MAAO,CACVqC,cAAa,EACbH,aAAc,CACZ,CAAC1C,GAAI,EAAG4B,QAAS,iCALR,E,qDAyBb,OAEI,yBAAKhC,UAAU,WACb,yBAAKI,GAAG,YACR,wBAAIJ,UAAU,UAAd,WACA,kDACA,2DACA,kBAAC,EAAD,CAAOoC,MAAOR,KAAKhB,MAAMkC,aAAcT,WAAYT,KAAKS,aACxD,kBAAC,EAAD,CAASK,QAASd,KAAKc,e,GAnCZR,aCmDNgB,E,kDAjDX,aAAc,IAAD,8BACb,gBAgBFR,QAAU,SAACF,GACXA,EAAKpC,GAAKwC,KAAKC,SACf,IAAIT,EAAK,sBAAO,EAAKxB,MAAMkC,cAAlB,CAAgCN,IACzC,EAAKrB,SAAS,CACZ2B,aAAcV,KArBD,EAwBfC,WAAc,SAACjC,GACb,IAAI2C,EAAW,EAAKnC,MAAMkC,aAAaE,QAAO,SAAAR,GAC5C,OAAOA,EAAKpC,KAAOA,KAElB,EAAKe,SAAS,CACf2B,aAAcC,KA3BhB,EAAKnC,MAAO,CACVqC,cAAa,EACbH,aAAc,CACZ,CAAC1C,GAAI,EAAG4B,QAAS,8FACjB,CAAC5B,GAAI,EAAG4B,QAAS,yDACjB,CAAC5B,GAAI,EAAG4B,QAAS,gCACjB,CAAC5B,GAAI,EAAG4B,QAAS,qCACjB,CAAC5B,GAAI,EAAG4B,QAAS,+DACjB,CAAC5B,GAAI,EAAG4B,QAAS,6FACjB,CAAC5B,GAAI,EAAG4B,QAAS,oHACjB,CAAC5B,GAAI,EAAG4B,QAAS,6HACjB,CAAC5B,GAAI,EAAG4B,QAAS,2GAbR,E,qDAiCb,OAEI,yBAAKhC,UAAU,WACb,yBAAKI,GAAG,YACR,wBAAIJ,UAAU,UAAd,kBACA,6NACA,8GACA,kDACA,2DACA,kBAAC,EAAD,CAAOoC,MAAOR,KAAKhB,MAAMkC,aAAcT,WAAYT,KAAKS,aACxD,kBAAC,EAAD,CAASK,QAASd,KAAKc,e,GA7CXR,aCmDPiB,E,kDAjDX,aAAc,IAAD,8BACb,gBAgBFT,QAAU,SAACF,GACXA,EAAKpC,GAAKwC,KAAKC,SACf,IAAIT,EAAK,sBAAO,EAAKxB,MAAMkC,cAAlB,CAAgCN,IACzC,EAAKrB,SAAS,CACZ2B,aAAcV,KArBD,EAwBfC,WAAc,SAACjC,GACb,IAAI2C,EAAW,EAAKnC,MAAMkC,aAAaE,QAAO,SAAAR,GAC5C,OAAOA,EAAKpC,KAAOA,KAElB,EAAKe,SAAS,CACf2B,aAAcC,KA3BhB,EAAKnC,MAAO,CACVqC,cAAa,EACbH,aAAc,CACZ,CAAC1C,GAAI,EAAG4B,QAAS,iGACjB,CAAC5B,GAAI,EAAG4B,QAAS,iGACjB,CAAC5B,GAAI,EAAG4B,QAAS,0FACjB,CAAC5B,GAAI,EAAG4B,QAAS,oEACjB,CAAC5B,GAAG,EAAG4B,QAAQ,4EACf,CAAC5B,GAAG,EAAG4B,QAAQ,2DACf,CAAC5B,GAAG,EAAG4B,QAAQ,oEACf,CAAC5B,GAAG,EAAG4B,QAAQ,uGACf,CAAC5B,GAAG,EAAG4B,QAAQ,kHAbN,E,qDAiCb,OAEI,yBAAKhC,UAAU,WACb,yBAAKI,GAAG,YACR,wBAAIJ,UAAU,UAAd,YACA,qNACA,yGACA,kDACA,2DACA,kBAAC,EAAD,CAAOoC,MAAOR,KAAKhB,MAAMkC,aAAcT,WAAYT,KAAKS,aACxD,kBAAC,EAAD,CAASK,QAASd,KAAKc,e,GA7CVR,aCsDRkB,E,kDApDX,aAAc,IAAD,8BACb,gBAmBFV,QAAU,SAACF,GACXA,EAAKpC,GAAKwC,KAAKC,SACf,IAAIT,EAAK,sBAAO,EAAKxB,MAAMkC,cAAlB,CAAgCN,IACzC,EAAKrB,SAAS,CACZ2B,aAAcV,KAxBD,EA2BfC,WAAc,SAACjC,GACb,IAAI2C,EAAW,EAAKnC,MAAMkC,aAAaE,QAAO,SAAAR,GAC5C,OAAOA,EAAKpC,KAAOA,KAElB,EAAKe,SAAS,CACf2B,aAAcC,KA9BhB,EAAKnC,MAAO,CACVqC,cAAa,EACbH,aAAc,CACZ,CAAC1C,GAAI,EAAG4B,QAAS,2EACjB,CAAC5B,GAAI,EAAG4B,QAAS,4DACjB,CAAC5B,GAAI,EAAG4B,QAAS,gFACjB,CAAC5B,GAAI,EAAG4B,QAAS,uEACjB,CAAC5B,GAAI,EAAG4B,QAAS,4EACjB,CAAC5B,GAAI,EAAG4B,QAAS,8DACjB,CAAC5B,GAAI,EAAG4B,QAAS,yDACjB,CAAC5B,GAAI,EAAG4B,QAAS,2EACjB,CAAC5B,GAAI,EAAG4B,QAAS,+KACjB,CAAC5B,GAAI,GAAI4B,QAAS,kLAClB,CAAC5B,GAAI,GAAI4B,QAAS,qJAClB,CAAC5B,GAAI,GAAI4B,QAAS,wGAhBT,E,qDAoCb,OAEI,yBAAKhC,UAAU,WACb,yBAAKI,GAAG,YACR,wBAAIJ,UAAU,UAAd,iBACA,0SACA,0EACA,kDACA,2DACA,kBAAC,EAAD,CAAOoC,MAAOR,KAAKhB,MAAMkC,aAAcT,WAAYT,KAAKS,aACxD,kBAAC,EAAD,CAASK,QAASd,KAAKc,e,GAhDXR,a,QCaPmB,EAfE,WACb,OACE,yBAAKrD,UAAU,UACb,6BACE,wBAAIA,UAAU,mBACZ,yCACA,gCAAQ,kBAAC,WAAD,CAAMsD,GAAG,mBAAT,qBACR,gCAAQ,kBAAC,WAAD,CAAMA,GAAG,qBAAT,aACR,gCAAQ,kBAAC,WAAD,CAAMA,GAAG,oBAAT,kBACR,gCAAQ,kBAAC,WAAD,CAAMA,GAAG,oBAAT,uBCqELC,E,kDArEb,aAAc,IAAD,8BACX,gBAUFtC,YAAc,SAACf,GACbA,EAAME,GAAKwC,KAAKC,SAChB,IAAIW,EAAS,sBAAO,EAAK5C,MAAMd,QAAlB,CAA0BI,IACvC,EAAKiB,SAAS,CACZrB,OAAQ0D,KAfC,EAkBbzD,YAAc,SAACK,GACb,IAAIoD,EAAY,EAAK5C,MAAMd,OAAOkD,QAAO,SAAA9C,GACvC,OAAOA,EAAME,KAAOA,KAEtB,EAAKe,SAAS,CACZrB,OAAQ0D,KArBV,EAAK5C,MAAO,CACVqC,cAAa,EACbnD,OAAQ,GAERgD,aAAc,IANL,E,wDA4BXlB,KAAKT,SAAS,CACZ8B,cAAcrB,KAAKhB,MAAMqC,iB,0CAK3BQ,QAAQC,IAAI,uB,2CAGZD,QAAQC,IAAI,uB,+BAGZ,OACE,kBAAC,gBAAD,KACA,yBAAK1D,UAAU,OAEb,4BAAQA,UAAU,cAChB,yBAAKK,IAAKsD,IAAM3D,UAAU,WAAWO,IAAI,SACzC,uCACA,sCAGF,kBAAC,EAAD,CAAUU,YAAaW,KAAKX,cAG5B,kBAAC,EAAD,CAAQnB,OAAQ8B,KAAKhB,MAAMd,OAASC,YAAa6B,KAAK7B,cAEtD,6BAEE,kBAAC,EAAD,MACE,kBAAC,IAAD,CAAO6D,KAAK,UAAUC,UAAWlB,IACjC,kBAAC,IAAD,CAAOiB,KAAK,WAAWC,UAAWX,IAClC,kBAAC,IAAD,CAAOU,KAAK,YAAYC,UAAWV,IACnC,kBAAC,IAAD,CAAOS,KAAK,WAAWC,UAAWT,W,GA9D5BlB,aCAE4B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtB,QAAQsB,MAAMA,EAAMC,c","file":"static/js/main.31c6ce96.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star.337e1f36.svg\";","module.exports = __webpack_public_path__ + \"static/media/lilninja.ec560f2c.png\";","import React from 'react';\r\nimport lilninja from './lilninja.png'\r\n\r\nconst Ninjas  = ({ninjas, deleteNinja}) => {\r\n\r\n    return(\r\n      <div className=\"ninja-list\">\r\n        {     \r\n        ninjas.map(ninja => {\r\n          return ninja ? (\r\n            <div className=\"ninja\" key={ninja.id}>\r\n              <img src={lilninja} alt='ninja'></img>\r\n              <div>Your Ninja Name: {ninja.name} <br />\r\n              Specialty: {ninja.specialty}</div>\r\n              <button onClick={() => {deleteNinja(ninja.id)}}>x</button>           \r\n            </div>\r\n          ) : null;\r\n        })\r\n        }\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Ninjas;","import React, { Component } from 'react'\r\n\r\nclass AddNinja extends Component {\r\n  state = {\r\n    name: null,\r\n    specialty: null,\r\n  }\r\n  \r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addingNinja(this.state);\r\n\r\n  }\r\n\r\n  handleLabelChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n\r\n    })\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    let ninjaName = '';\r\n    let oldname = e.target.value;\r\n    let name = oldname.toLowerCase().split('');\r\n\r\n    for(let i = 0 ; i < 3; i++) {\r\n      if (name[i] === 'a'){ \r\n        ninjaName +=  ('ka')\r\n      }else if (name[i] === 'b'){\r\n      ninjaName += ('zu')\r\n        }else if (name[i] === 'c'){\r\n      ninjaName += ('mi')\r\n        }else if (name[i] === 'd'){\r\n      ninjaName += ('te')\r\n        }else if (name[i] === 'e'){\r\n      ninjaName += ('ku')  \r\n        }else if (name[i] === 'f'){\r\n      ninjaName += ('lu')\r\n        }else if (name[i] === 'g'){\r\n      ninjaName += ('ji')\r\n        }else if (name[i] === 'h'){\r\n      ninjaName += ('ri')\r\n        }else if (name[i] === 'i'){\r\n      ninjaName += ('ki')\r\n        }else if (name[i] === 'j'){\r\n      ninjaName += ('zu')\r\n        }else if (name[i] === 'k'){\r\n      ninjaName += ('me')\r\n        }else if (name[i] === 'l'){\r\n      ninjaName += ('ta')\r\n        }else if (name[i] === 'm'){\r\n      ninjaName += ('rin')\r\n        }else if (name[i] === 'n'){\r\n      ninjaName += ('to')\r\n        }else if (name[i] === 'o'){\r\n      ninjaName += ('mo')\r\n        }else if (name[i] === 'p'){\r\n      ninjaName += ('no')\r\n        }else if (name[i] === 'q'){\r\n      ninjaName += ('ke')\r\n        }else if (name[i] === 'r'){\r\n      ninjaName += ('shi')\r\n        }else if (name[i] === 's'){\r\n      ninjaName += ('ari')\r\n        }else if (name[i] === 't'){\r\n      ninjaName += ('chi')\r\n        }else if (name[i] === 'u'){\r\n      ninjaName += ('do')\r\n        }else if (name[i] === 'v'){\r\n      ninjaName += ('ru')\r\n        }else if (name[i] === 'w'){\r\n      ninjaName += ('mei')\r\n        }else if (name[i] === 'x'){\r\n      ninjaName += ('na')\r\n        }else if (name[i] === 'y'){\r\n      ninjaName += ('fu')\r\n        }else if (name[i] === 'z'){\r\n      ninjaName += ('zi')\r\n      }else{\r\n        ninjaName = (\"Invalid name, use at least 3 aphabet letters\");\r\n        break;\r\n      }; \r\n    }\r\n    this.setState({\r\n      [e.target.id]: ninjaName\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toTitle\">\r\n        <form  onSubmit={this.handleSubmit}>\r\n          <div>\r\n          <label htmlFor=\"name\">Your Name:</label></div>\r\n          <div><input type=\"text\" id='name' onChange={this.handleChange} value={this.state.content} /></div>\r\n\r\n          <div><label htmlFor=\"specialty\">Specialty:</label></div>\r\n          <div><select id='specialty' onChange={this.handleLabelChange} value={this.state.content} >\r\n            <option defaultValue=\"Iron Fist Punch\">Iron Fist Punch</option>\r\n            <option value=\"Cobra Strike Punch\">Cobra Strike Punch</option>            \r\n            <option value=\"Winged Horse Kick\">Winged Horse Kick</option>\r\n            <option value=\"Lightning Kick\">Lightning Kick</option>\r\n            <option value=\"Dragons Tail Throw\">Dragons Tail Throw</option>\r\n            <option value=\"Teeth Of Tiger Throw\">Teeth Of Tiger Throw</option>\r\n          </select></div>\r\n          <div><button>Add Ninja</button></div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default AddNinja;","import React from 'react'\r\n\r\nconst Todos = ({todos, deleteTodo}) => {\r\n  const todoList = todos.length \r\n  ? \r\n    (todos.map(todo =>{return (\r\n      <div className=\"collection-item\" key={todo.id}>\r\n        <span onClick={()=> {deleteTodo(todo.id)}}>{todo.content}</span>\r\n      </div>)})) \r\n  : (<h2 className=\"center\">Congrats! Mission Completed!</h2>)\r\n\r\n    return (\r\n    <div className=\"Ninjatodos collection\">\r\n      {todoList}\r\n    </div>\r\n  )\r\n}\r\nexport default Todos;","import React, { Component } from 'react'\r\n\r\nclass AddTodo extends Component {\r\n  state ={\r\n    content: ''\r\n\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      content: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addTodo(this.state);\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>Add New Assignment</label>\r\n          <input type=\"text\" onChange={this.handleChange} value={this.state.content}></input>\r\n          <button>Add</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default AddTodo\r\n","import React, {Component} from 'react';\r\nimport Todos from '../Todos';\r\nimport AddTodo from '../AddTodo';\r\n\r\n\r\n\r\nclass Create extends Component {\r\n\r\n    constructor(){\r\n    super()\r\n    this.state ={\r\n      showMissions:false,\r\n      missionTodos: [\r\n        {id: 1, content: 'Create Custom Mission Below'},        \r\n      ]\r\n    }\r\n  }\r\n  addTodo = (todo) =>{\r\n  todo.id = Math.random();\r\n  let todos = [...this.state.missionTodos, todo];\r\n  this.setState({\r\n    missionTodos: todos\r\n  })\r\n}\r\n  deleteTodo =  (id) =>{\r\n    let newTodos = this.state.missionTodos.filter(todo =>{\r\n      return todo.id !== id\r\n    });\r\n       this.setState({\r\n      missionTodos: newTodos\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n\r\n        <div className=\"mission\">\r\n          <div id='mission'></div>\r\n          <h2 className=\"center\">Mission</h2>\r\n          <h3>Mission To Do List</h3>\r\n          <label>( touch item to delete )</label>\r\n          <Todos todos={this.state.missionTodos} deleteTodo={this.deleteTodo} />\r\n          <AddTodo addTodo={this.addTodo} />\r\n        </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default Create;","import React, {Component} from 'react';\r\nimport Todos from '../Todos';\r\nimport AddTodo from '../AddTodo';\r\n\r\n\r\n\r\nclass RedDawn extends Component {\r\n\r\n    constructor(){\r\n    super()\r\n    this.state ={\r\n      showMissions:false,\r\n      missionTodos: [\r\n        {id: 1, content: 'Necessary gear: torinoko(firecrackers), tetsubishi(spikes), kesarigame(sickle with chain).'},\r\n        {id: 2, content: 'there will be no escort, find your way into the city.'},\r\n        {id: 3, content: 'find the fortress of Hirado.'},\r\n        {id: 4, content: 'sneak over back wall of fortress.'},\r\n        {id: 5, content: 'find the princess, free her, and lead her to the rendezvous'},\r\n        {id: 6, content: 'You have been spotted! Throw your tetsubishi spikes on the floor to slow down the guards.'},\r\n        {id: 7, content: 'In the next room you spot a group of soldiers you cannot pass: use your torinoko firecrackers to disorient them.'},\r\n        {id: 8, content: 'You have almost made it, but one guard remains in the way to the rendezvous. Use your Kusargame(sickle) to eliminate him.'},\r\n        {id: 9, content: 'Run quickly to the river that runs through the palace, a wasen boat will be waiting for the princess.'},               \r\n      ]\r\n    }\r\n  }\r\n  addTodo = (todo) =>{\r\n  todo.id = Math.random();\r\n  let todos = [...this.state.missionTodos, todo];\r\n  this.setState({\r\n    missionTodos: todos\r\n  })\r\n}\r\n  deleteTodo =  (id) =>{\r\n    let newTodos = this.state.missionTodos.filter(todo =>{\r\n      return todo.id !== id\r\n    });\r\n       this.setState({\r\n      missionTodos: newTodos\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n\r\n        <div className=\"mission\">\r\n          <div id='mission'></div>\r\n          <h2 className=\"center\">Red Blood Dawn</h2>\r\n          <h4>Princess Takara has been captured by the invading Mongolians! She is held up in the fortress of Hirado.  You must be silent as the night to sneek past troops in a heavily guarded building. </h4>\r\n          <h4> The Emperor Is Expecting Nothing Less Than The Full Recovery of His Daughter </h4>\r\n          <h3>Mission To Do List</h3>\r\n          <label>( touch item to delete )</label>\r\n          <Todos todos={this.state.missionTodos} deleteTodo={this.deleteTodo} />\r\n          <AddTodo addTodo={this.addTodo} />\r\n        </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default RedDawn;","import React, {Component} from 'react';\r\nimport Todos from '../Todos';\r\nimport AddTodo from '../AddTodo';\r\n\r\n\r\n\r\nclass Firebase extends Component {\r\n\r\n    constructor(){\r\n    super()\r\n    this.state ={\r\n      showMissions:false,\r\n      missionTodos: [\r\n        {id: 1, content: 'necessary gear: Shinobi Shozoku(Ninja Suit), takagi (climbing hooks), shuriken (ninja stars).'},\r\n        {id: 2, content: 'at midnight meet with Jinichi at the yellow shrine. He will take you past the initial guards.'},\r\n        {id: 3, content: 'climb up vertical wall using your takagi climbing hooks and enter the large warehouse.'},\r\n        {id: 4, content: 'sneak past the patrols in the warehouse and make it to the dock.'},\r\n        {id:5, content:'find the large ship with a small red target painted on the hind quarter.'},\r\n        {id:6, content:'climb aboard and go to bottom and set the cargo on fire'},\r\n        {id:7, content:'escape the dock area quickly and meet jinichi at the rendezvous.'},\r\n        {id:8, content:'Your ship is in flames! Now the village is alive with soldiers. Make your way out over the rooftops'},\r\n        {id:9, content:'three guards stand between you and Jinichi escaping the city, use your shuriken ninja stars to impail them. '},\r\n      ]\r\n    }\r\n  }\r\n  addTodo = (todo) =>{\r\n  todo.id = Math.random();\r\n  let todos = [...this.state.missionTodos, todo];\r\n  this.setState({\r\n    missionTodos: todos\r\n  })\r\n}\r\n  deleteTodo =  (id) =>{\r\n    let newTodos = this.state.missionTodos.filter(todo =>{\r\n      return todo.id !== id\r\n    });\r\n       this.setState({\r\n      missionTodos: newTodos\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n\r\n        <div className=\"mission\">\r\n          <div id='mission'></div>\r\n          <h2 className=\"center\">Firebase</h2>\r\n          <h4> Our Informat has let us know of a great weapons stash loaded on a enemies ship in the harbor of Harido. It is your job to sink or destroy ship to inhibit the mighty mongolian army.</h4>\r\n          <h4> The General of the Empires majesty has entrusted you with this mission. </h4>\r\n          <h3>Mission To Do List</h3>\r\n          <label>( touch finished items )</label>\r\n          <Todos todos={this.state.missionTodos} deleteTodo={this.deleteTodo} />\r\n          <AddTodo addTodo={this.addTodo} />\r\n        </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default Firebase;","import React, {Component} from 'react';\r\nimport Todos from '../Todos';\r\nimport AddTodo from '../AddTodo';\r\n\r\n\r\n\r\nclass Killfox extends Component {\r\n\r\n    constructor(){\r\n    super()\r\n    this.state ={\r\n      showMissions:false,\r\n      missionTodos: [\r\n        {id: 1, content: 'Necessary gear: Katana(sword), Kusari katabira(chain armor), Yumi(bow).'},\r\n        {id: 2, content: 'At dusk meet with kawakami at the tea house on mt. haku.'},\r\n        {id: 3, content: 'KawakamiKawakami will train you too make sure your bow skills are up to par.'},\r\n        {id: 4, content: 'If you pass he will take you to the south field near Korean palace.'},\r\n        {id: 5, content: 'from their you will need to sneak through the field of patrolling units.'},\r\n        {id: 6, content: 'find your way through the workers without getting spotted.'},\r\n        {id: 7, content: 'work your way up into the balcony in the grand hall. '},\r\n        {id: 8, content: 'wait patentietly for the general to show up then Take your shot at him.'},\r\n        {id: 9, content: 'The general has been hit! and immediatly your fellow ninja sets off a large explosion in a wagon outside the hall. you take advantage of the moment to escape the balcony. '}, \r\n        {id: 10, content: 'The palace is alive like a hornets nest! You must fight your way through many guards. But hurry! The more time you take to fight, the more organized the mongolians will be...'},\r\n        {id: 11, content: 'YOu have been surrounded by more soldiers than you can fight. Quick thinking, you pull smoke bomb and strike it on the floor and make your escape'},\r\n        {id: 12, content: 'make your way into the forest to the red barn, you will find a black Kisouma horse waiting for you'}              \r\n      ]\r\n    }\r\n  }\r\n  addTodo = (todo) =>{\r\n  todo.id = Math.random();\r\n  let todos = [...this.state.missionTodos, todo];\r\n  this.setState({\r\n    missionTodos: todos\r\n  })\r\n}\r\n  deleteTodo =  (id) =>{\r\n    let newTodos = this.state.missionTodos.filter(todo =>{\r\n      return todo.id !== id\r\n    });\r\n       this.setState({\r\n      missionTodos: newTodos\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n\r\n        <div className=\"mission\">\r\n          <div id='mission'></div>\r\n          <h2 className=\"center\">To Kill A Fox</h2>\r\n          <h4>Kublah Khan's top general, Liu Fuxiang  will be going to a ball at the palace of korea 3 days from now; from the balcony there you will get one chance with your Yumi bow to take out this Mongolian general and greatly change the fate of Japan. You might not survive. </h4>\r\n          <h4> The Empire of the sun is counting on you </h4>\r\n          <h3>Mission To Do List</h3>\r\n          <label>( touch item to delete )</label>\r\n          <Todos todos={this.state.missionTodos} deleteTodo={this.deleteTodo} />\r\n          <AddTodo addTodo={this.addTodo} />\r\n        </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default Killfox;","import React from 'react'\r\nimport {HashLink as Link} from 'react-router-hash-link';\r\n\r\n\r\n  const Navbar = () => {\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <div>\r\n          <ul className=\"mission-buttons\">\r\n            <h2>Missions:</h2>\r\n            <button><Link to=\"/Create#mission\">Create A Mission</Link></button>\r\n            <button><Link to=\"/Firebase#mission\">Firebase</Link></button>\r\n            <button><Link to=\"/Killfox#mission\">To Kill A Fox</Link></button>\r\n            <button><Link to=\"/RedDawn#mission\">Red Blood Dawn</Link></button>                                    \r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\nexport default Navbar","import React, { Component } from 'react';\r\nimport star from './star.svg';\r\nimport './App.css';\r\nimport Ninjas from './Ninjas';\r\nimport AddNinja from './AddNinja';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport Create from './missions/Create';\r\nimport RedDawn from './missions/RedDawn';\r\nimport Firebase from './missions/Firebase';\r\nimport Killfox from './missions/Killfox';\r\nimport Navbar from './missions/Navbar';\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super()\r\n    this.state ={\r\n      showMissions:false,\r\n      ninjas: [\r\n      ],\r\n      missionTodos: [\r\n      ],\r\n    }\r\n  };\r\n\r\n  addingNinja = (ninja) =>{\r\n    ninja.id = Math.random();\r\n    let newNinjas = [...this.state.ninjas, ninja]\r\n    this.setState({\r\n      ninjas: newNinjas\r\n    })\r\n  }\r\n  deleteNinja = (id) =>{\r\n    let newNinjas = this.state.ninjas.filter(ninja =>{\r\n      return ninja.id !== id\r\n    });\r\n    this.setState({\r\n      ninjas: newNinjas\r\n    })\r\n  }\r\n\r\n  operation(){\r\n    this.setState({\r\n      showMissions:!this.state.showMissions\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log(\"component mounted\")\r\n  }\r\n  componentDidUpdate(){\r\n    console.log('component updated')\r\n  }\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n      <div className=\"App\">\r\n\r\n        <header className=\"App-header\">\r\n          <img src={star} className=\"App-logo\" alt=\"logo\" />\r\n          <h1>Shinobi</h1>\r\n          <h1>Ninja</h1>\r\n        </header>\r\n        \r\n        <AddNinja addingNinja={this.addingNinja} />\r\n\r\n\r\n        <Ninjas ninjas={this.state.ninjas}  deleteNinja={this.deleteNinja} />\r\n\r\n        <div>\r\n\r\n          <Navbar />\r\n            <Route path='/Create' component={Create} />\r\n            <Route path='/RedDawn' component={RedDawn} />  \r\n            <Route path='/Firebase' component={Firebase} />  \r\n            <Route path='/Killfox' component={Killfox} />       \r\n\r\n        </div>\r\n      </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n\r\n        //{this.state.showMissions?         :null}\r\n\r\n        /*\r\n                <button onClick={()=>this.operation()}>Create Mission</button>\r\n        <button onClick={()=>this.operation()}>Mission: Red Blood Dawn</button>\r\n        <button onClick={()=>this.operation()}>Mission: Firebase</button>\r\n        <button onClick={()=>this.operation()}>Mission: To Kill A Fox</button>\r\n        */","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}